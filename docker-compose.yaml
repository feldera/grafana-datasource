services:
  feldera:
    tty: true
    image: ghcr.io/feldera/pipeline-manager:${FELDERA_VERSION:-latest}
    ports:
      - "8080:8080"
      - "8081:8081"
    stop_grace_period: 0s
    environment:
      - RUST_LOG=info,actix_web=error,tokio_postgres=info
      - RUST_BACKTRACE=1
      - AUTH_CLIENT_ID
      - AUTH_ISSUER
    security_opt:
      # The default seccomp profile disables the `io_uring_*` syscalls that we need.
      # Ideally, we would minimally relax the default profile, which is usually in
      # /usr/share/container/seccomp.json, but we often start via `curl` of just this
      # `docker-compose.yml`, so there's no way to grab the specific file at the
      # same time, so instead we just use `seccomp:unconfined`.
      #
      #- seccomp:seccomp.json
      - seccomp:unconfined
    healthcheck:
      # TODO: add `/status` endpoint.
      test:
        [
          "CMD-SHELL",
          "curl --fail --request GET --url http://localhost:8080/healthz"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    user: root
    container_name: 'feldera-feldera-datasource'

    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana-enterprise}
        grafana_version: ${GRAFANA_VERSION:-11.3.2}
        development: ${DEVELOPMENT:-false}
        anonymous_auth_enabled: ${ANONYMOUS_AUTH_ENABLED:-true}
    ports:
      - 3000:3000/tcp
      - 2345:2345/tcp # delve
    security_opt:
      - 'apparmor:unconfined'
      - 'seccomp:unconfined'
    cap_add:
      - SYS_PTRACE
    volumes:
      - ./dist:/var/lib/grafana/plugins/feldera-feldera-datasource
      - ./provisioning:/etc/grafana/provisioning
      - .:/root/feldera-feldera-datasource

    environment:
      NODE_ENV: development
      GF_LOG_FILTERS: plugin.feldera-feldera-datasource:debug
      GF_LOG_LEVEL: debug
      GF_DATAPROXY_LOGGING: 1
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: feldera-feldera-datasource

